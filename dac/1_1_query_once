import numpy as np
from settings_baseline import motor_speed_bias, quadruple_tank_bias, lane_keeping, f16_bias, aircraft_pitch_bias, boeing747_bias, platoon_bias, quadrotor_bias, rlc_circuit_bias
from utils.observers.kalman_filter import KalmanFilter
from utils.detector.cusum import CUSUM

# input attack_y
# output query result, y, ref
class QueryOnce:
    def __init__(self,start_index = 200, exp = quadruple_tank_bias, detector = CUSUM, attack_y):
        self.start_index = start_index
        self.exp = exp
        self.detector = detector
        self.attack_y = attack_y
        self.end_query = False
        self.kf_Q = exp.model.p_noise_dist.sigma if exp.model.p_noise_dist is not None else np.zeros_like(exp.model.sysd.A)
        self.kf = KalmanFilter(exp.model.sysd.A, exp.model.sysd.B, exp.model.sysd.C, exp.model.sysd.D, self.kf_Q, exp.kf_R)

        self.x_update = None
        self.x_update_list = []
        self.y_list = []
        self.control_list = []
        self.alarm_list = []
        self.residual_list = []

    # evolve
    def evolve(self):
        i = 0
        while not self.end_query:
            self.exp.model.update_current_ref(self.exp.ref[i])
            self.exp.model.evolve()
            if i == 0:
                self.x_update = self.exp.model.cur_x
            if i > 0:
                self.exp.model.cur_y, end_query = self.exp.query.launch(self.exp.model.cur_y, self.exp.model.cur_index)
                x_update, P_update, residual = self.kf.one_step(x_update, self.kf_P, self.exp.model.cur_u, self.exp.model.cur_y)
                self.exp.model.cur_feedback = x_update

    # launch attack
    def launch(self, cur_data, cur_index):
        self.point = np.array(self.point)
        end_query = False
        if self.index >= len(self.point):
            end_query = True
            return cur_data, end_query
        if cur_index >= self.start_index and self.index < len(self.point):

            cur_data = self.point[self.index]
            self.index += 1
            return cur_data, end_query
        else:
            return cur_data, end_query
